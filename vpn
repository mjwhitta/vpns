#!/usr/bin/env bash

default_vpn() {
    local ret="$(json_get default_vpn)"
    echo "${ret:-pia}"
}

err() { echo -e "${color:+\e[31m}[!] $@\e[0m"; }

errx() { echo -e "${color:+\e[31m}[!] ${@:2}\e[0m"; exit $1; }

good() { echo -e "${color:+\e[32m}[+] $@\e[0m"; }

info() { echo -e "${color:+\e[37m}[*] $@\e[0m"; }

json_get() {
    [[ -z $conf ]] || jq -cMrS ".$@" $conf | sed -r "s/^null$//g"
}

long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 1 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 1; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}

subinfo() { echo -e "${color:+\e[36m}[=] $@\e[0m"; }

usage() {
    echo "Usage: ${0##*/} [OPTIONS] -- [pass-thru options]"
    echo
    echo "This is a wrapper script for other vpn scripts. Supported"
    echo "VPNs include PIA, ProtonVPN, VPNBook, and WindScribe."
    echo
    echo "Options:"
    echo "    -h, --help       Display this help message"
    echo "    -l, --list       List included VPNs"
    echo "    --nocolor        Disable colorized output"
    local default="(default: $(default_vpn))"
    echo "    -v, --vpn=VPN    Use the specified VPN $default"
    echo
    exit $1
}

warn() { echo -e "${color:+\e[33m}[-] $@\e[0m"; }

for dep in jq; do
    [[ -n $(command -v $dep) ]] || errx 3 "$dep is not installed"
done; unset dep

declare -a args
unset conf help
action="vpn"
color="true"
confdir="$HOME/.config/vpn"
[[ ! -f $confdir/vpn.conf ]] || conf="$confdir/vpn.conf"
vpn="$(default_vpn)"

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-h"|"--help") help="true" ;;
        "-l"|"--list") action="list" ;;
        "--nocolor") unset color ;;
        "-v"|"--vpn"*) vpn="$(long_opt $@)" || shift ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ -z ${args[@]} ]] || set -- "${args[@]}"

# Check for valid params and missing dependencies
[[ -z $help ]] || usage 0
[[ $# -gt 0 ]] || [[ $action == "list" ]] || usage 2

providers="INSTALL_DIR/providers"
[[ $0 != "./vpn" ]] || providers="providers"

(
    cd $providers
    case "$action" in
        "list")
            find . -maxdepth 1 -mindepth 1 \( -type d -o -type l \) | \
                sed "s#./##g" | sort
            ;;
        "vpn")
            [[ -d $vpn ]] || usage 5
            cd $vpn && ./vpn.sh $@
            ;;
        *) usage 4
    esac
)
