#!/usr/bin/env bash

### Helpers begin
check_deps() {
    for d in "${deps[@]}"; do
        [[ -n $(command -v "$d") ]] || errx 128 "$d is not installed"
    done; unset d
}
err() { echo -e "${color:+\e[31m}[!] $*\e[0m"; }
errx() { echo -e "${color:+\e[31m}[!] ${*:2}\e[0m"; exit "$1"; }
good() { echo -e "${color:+\e[32m}[+] $*\e[0m"; }
info() { echo -e "${color:+\e[37m}[*] $*\e[0m"; }
long_opt() {
    local arg shift="0"
    case "$1" in
        "--"*"="*) arg="${1#*=}"; [[ -n $arg ]] || usage 127 ;;
        *) shift="1"; shift; [[ $# -gt 0 ]] || usage 127; arg="$1" ;;
    esac
    echo "$arg"
    return $shift
}
subinfo() { echo -e "${color:+\e[36m}[=] $*\e[0m"; }
warn() { echo -e "${color:+\e[33m}[-] $*\e[0m"; }
### Helpers end

default_vpn() {
    local ret="$(json_get default_vpn)"
    echo "${ret:-pia}"
}

json_get() {
    if [[ -z $conf ]] || [[ ! -f "$conf" ]]; then
        return
    fi
    jq -cMrS ".$*" "$conf" | sed -r "s/^null$//g"
}

usage() {
    cat <<EOF
Usage: ${0##*/} [OPTIONS] <action> [vpn]

This is a wrapper script for other vpn scripts. Supported VPNs include
PIA, ProtonVPN, VPNBook, and WindScribe.

Options:
    -g, --gw=GW      Use the specified gateway
    -h, --help       Display this help message
    --nocolor        Disable colorized output
    -r, --random     Use random VPN gateway
    -v, --vpn=VPN    Use the specified VPN (default: $(default_vpn))

EOF
    exit "$1"
}

declare -a args deps
unset action conf help gw nocolor random vpn
color="true"
confdir="$HOME/.config/vpn"
[[ ! -f "$confdir/vpn.conf" ]] || conf="$confdir/vpn.conf"
deps+=("jq")

# Check for missing dependencies
check_deps

# Parse command line options
while [[ $# -gt 0 ]]; do
    case "$1" in
        "--") shift && args+=("$@") && break ;;
        "-g"|"--gw"*) gw="$(long_opt "$@")" || shift ;;
        "-h"|"--help") help="true" ;;
        "--nocolor") nocolor="--nocolor"; unset color ;;
        "-r"|"--random") random="--random" ;;
        "-v"|"--vpn"*) vpn="$(long_opt "$@")" || shift ;;
        *) args+=("$1") ;;
    esac
    shift
done
[[ ${#args[@]} -eq 0 ]] || set -- "${args[@]}"

# Check for valid params
[[ -z $help ]] || usage 0
[[ $# -gt 0 ]] || usage 1

action="$1"
[[ -n $vpn ]] || [[ $# -eq 1 ]] || vpn="$2"

providers="INSTALL_DIR/providers"
[[ $0 != "./vpn" ]] || providers="providers"

(
    cd $providers
    case "$action" in
        "help")
            if [[ -n $vpn ]]; then
                [[ -d "$vpn" ]] || errx 2 "$vpn doesn't exist"
                cd "$vpn" && ./vpn.sh -h $nocolor $random
            else
                usage 0
            fi
            ;;
        "list")
            if [[ -n $vpn ]]; then
                [[ -d "$vpn" ]] || errx 2 "$vpn doesn't exist"
                cd "$vpn" && ./vpn.sh $nocolor $random "$action"
            else
                find . -maxdepth 1 -mindepth 1 \
                    \( -type d -o -type l \) | sed "s#./##g" | sort
            fi
            ;;
        "start"|"stop")
            [[ -n $vpn ]] || vpn="$(default_vpn)"
            [[ -d "$vpn" ]] || errx 2 "$vpn doesn't exist"
            cd "$vpn"
            ./vpn.sh ${gw:+--gw $gw} $nocolor $random "$action"
            ;;
        *) usage 3
    esac
)
